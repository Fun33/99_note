http://webftp.cogsh.tp.edu.tw/cti573/bcc2012/handout/unit4.htm 
是觀念,等著被看

計算機語言乃是人與電腦間溝通的語言，亦稱程式語言
程式語言並非一經撰寫即可在電腦上執行，而是必須經過一定程序的轉換，轉換為電腦所能辨識的執行指令，方可執行。
程式語言轉換的過程亦可稱為翻譯。
最終轉換的結果為機器語言，只有機器語言才能在電腦上執行

語言<-非物件導向語言<-通用程式語言<-問題導向語言<-程式導向
語語<-物件導向語言

計算機語言的演進歷史如下：
第一代	機器語言	由0與1所構成，電腦能直接執行的程式語言
第二代	組合語言	利用『助憶碼』取代數字碼，亦稱符號語言
第三代	程序導向語言	高階語言以1954年IBM的FORTRAN語言開始
第四代	非程序導向語言	4GL，,查詢語言SQL，應用程式產生器。1970年代萌芽，1980年大量使用主要應用在一般資訊查詢與報表列印，以事件驅動為主
第五代	自然語言	應用在人工智慧AI與所衍生的專家系統ES等特殊領域

 
約略可分為物件導向語言與傳統的非物件導向語言兩種
●通用程式語言：可分為機器導向語言(機器語言，組合語言)，問題導向語言(程序導向，非程序導向語言)
	機器導向語言依據程式語言【對硬體設備的相依性】，可分為低階語言與高階語言
	-低階語言：對硬體系統的相依性高，例如組合語言與機器語言，對不同機種間其指令具有很大的差異性。
	-高階語言：以類似人類語言格式所形成的語言，對硬體系統的相依性低，所以具有極高的可攜性，可以在不同的電腦系統上編譯執行
	問題導向語言【依程式設計模式】又可分為：
	-程序導向語言：指一般結構化高階程式語言，例如Basic,Cobol,Pascal,Fortran,C,Ada...等 。包括有三基本機構：選擇（循序）、判斷（決策、選擇）、重複機構（迴圈）
	-非程序導向語言：指該類程式語言以完成工作為設計導向，例如完成電腦報表的製作，或是設計以完成文件排版格式等各類的程式語言。又稱為4GL程式語言

●特殊問題導向語言：應用於程式控制、數值控制、模擬控制等用途


