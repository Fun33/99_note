
----------------------------------- ------------------------------------------情境
情境:
當初是想設 3G，留 1G 給 OS 用的，原來這不包括 Sql Server 的 dll 佔的記憶體，變成佔了 3.2 到 3.5G 之間，
OS 剩 500mb 到 800mb 可以用，加上 ReportServicesService 又佔了 100mb 左右，系統不夠用了，看起來又要設定最大記憶體使用量了。
至於 Sql 指令的寫法，因為程式碼太複製、太龐大，幾百個 dll 檔，主要畫面光是存檔的 Delphi 程式碼就有好幾百行，
有十幾個資料表用 UpdateBatch(arAll) 一次存檔，表頭三百個欄位，主項次資料表也是三百個欄位，
還要比對欄位內容有沒有異動，有異動的，要新增一筆異動記錄存到資料庫，異動前和異動後的內容都要存起來，有事才能找人來負責。
新增一張帳單，必須讀取資料庫十一次，來把相關欄位先填好，再讓使用者輸入。
能改善就改善，不能改善就算了，只要能做到 "平均時間不要差距太多"，這樣就可以了，如果現在查詢花了十秒，
我可以解釋是資料庫資料龐大，但如果等一下相同指令再查一次，花了兩分鐘，這樣就說不過去了。

-----------------------------------ANS------------------------------------------情境Q&A
Q:異動前和異動後的內容都要存起來，有事才能找人來負責
A:
這是好的。但我建議用trigger來處理，自動的新增至"異動log"。我以前的電信公司也是如此。

Q:新增一張帳單，必須讀取資料庫十一次，來把相關欄位先填好，再讓使用者輸入
A:
不知是否有使用 view + dirty read ( with (nolck))的方式來查，並將之寫成 stored procdure (sp)，這樣效能又會差很多
以往的經驗，幾乎都是寫 SP，寫VIEW，寫TRIGGER來處理大資料庫系統。即都是實做在SEVRVER上的。
程式(如DELPHI)僅是很單純的叫一下，也不太FOR N次，就連要寫，也是呼叫SP，讓SP可能一次寫N個TABLE。


Q:如果現在查詢花了十秒，我可以解釋是資料庫資料龐大，但等一下相同指令再查一次，花了兩分鐘
A:
除非你限制整個SERVER僅一個人連線，或許這樣的測式才有意義。若是N個人同時連上去的話，
這次快，下次慢，這就變得很"正常"。原因就是若有不良的SQL語法就會造成各種LOCK (含最輕的與最重的)。
比如說，某人剛好在UPDATE 資料，B這個人剛好要查，那這時候B就會發現慢很多。
而若B在查的時候，剛好沒人查，或是別人也僅是SELECT，那就又快一點。   
所以我才會一直和你說  WITH (NOLOCK) 這個指令有沒有用到。 我所見過極多數都不知道要如此來用。
比如說，印帳單，印的是上個月的資料，非即時性的。於是 NOLOCK 的方式不僅可得到正確答案，而且不會鎖，也不怕鎖。
在N人上線時，有人查，有人交易等等複雜的情形下，這樣NO LOCK效能就整個拉出差異來。


Q:如果這個SERVER剛裝的時候很快，然後經過半年、一年或更久，就變得很慢
A:
就是TABLE變大了。而這時候該注意的是，每天半夜要做資料庫維護計畫，含移動一些資料到別的TABLE，含RE-INDEX 等，
這樣才可以保持從安裝，到數年，速度都沒有太大的改變。